/*
  Auto-generated by Spline
*/
'use client'
import useSpline from '@splinetool/r3f-spline'
import { OrthographicCamera, useKeyboardControls } from '@react-three/drei'
import { EffectComposer, Vignette } from '@react-three/postprocessing'
import { useFrame } from '@react-three/fiber'
import { Group } from 'three'
import { useRef } from 'react'

export default function Scene(props: any) {
  const { nodes, materials } = useSpline('https://prod.spline.design/3FKI6a2OOcWXrZMJ/scene.splinecode')

  const w = useKeyboardControls((state) => state.w)
  const a = useKeyboardControls((state) => state.a)
  const s = useKeyboardControls((state) => state.s)
  const d = useKeyboardControls((state) => state.d)

  const cameraBoom = useRef<Group>()
  useFrame((_, deltaTime) => {
    let { x, y, z } = cameraBoom.current.rotation

    x -= w ? Math.PI * deltaTime : 0
    x += s ? Math.PI * deltaTime : 0
    y -= a ? Math.PI * deltaTime : 0
    y += d ? Math.PI * deltaTime : 0

    cameraBoom.current.rotation.set(x, y, z)
  })

  return (
    <>
      <EffectComposer>
        <Vignette />
      </EffectComposer>
      <color attach="background" args={['#fef4ef']} />
      <group {...props} dispose={null}>
        <directionalLight
          name="Directional Light"
          castShadow
          intensity={0.6}
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
          shadow-camera-near={-10000}
          shadow-camera-far={100000}
          shadow-camera-left={-5000}
          shadow-camera-right={5000}
          shadow-camera-top={5000}
          shadow-camera-bottom={-5000}
          position={[18.54, 196.55, 491.49]}
        />
        <mesh name="Torus" geometry={nodes.Torus.geometry} material={materials['']} castShadow receiveShadow />
        <group ref={cameraBoom}>
          <OrthographicCamera
            name="Default Camera"
            makeDefault
            far={50000}
            near={-50000}
            position={[421.6, -431.22, 801.18]}
            rotation={[0.45, 0.44, -0.2]}
          />
        </group>
        <mesh
          name="Rectangle 6"
          geometry={nodes['Rectangle 6'].geometry}
          material={materials['']}
          castShadow
          receiveShadow
          position={[-700.64, 343.77, -621.72]}
        />
        <mesh
          name="Rectangle 5"
          geometry={nodes['Rectangle 5'].geometry}
          material={materials.Turquose}
          castShadow
          receiveShadow
          position={[-458.87, 411.05, -435.92]}
        />
        <mesh
          name="Rectangle 4"
          geometry={nodes['Rectangle 4'].geometry}
          material={materials.Orange}
          castShadow
          receiveShadow
          position={[40.66, 47, -435.92]}
        />
        <mesh
          name="Rectangle 3"
          geometry={nodes['Rectangle 3'].geometry}
          material={materials.Purple}
          castShadow
          receiveShadow
          position={[-348.74, -162.23, -167.36]}
        />
        <mesh
          name="Rectangle 2"
          geometry={nodes['Rectangle 2'].geometry}
          material={materials['']}
          castShadow
          receiveShadow
          position={[242.6, 207, -273.39]}
        />
      </group>
    </>
  )
}
